
/* ==========================================================================



      HELPERS CLASSES



========================================================================== */

/*
 * Hide visually and from screen readers:
 */

.hidden {
    display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}


/* ==========================================================================



      MIXIN



========================================================================== */


/* ==========================================================================
Full layout
========================================================================== */

@mixin full-space($offset: 0) {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
}

/* ==========================================================================
Clearfix
========================================================================== */

@mixin clearfix(){
  &::before, &::after {
    content: "";
    display: table;
  }
  &::after {
    clear: both;
  }

 }
%clearfix {
  @include clearfix;
}


/* ==========================================================================
Rem value
========================================================================== */

$base-font-size: 16px;
$base-line-height: 1.6;
$baseline-rem: $base-font-size / 1rem;

// Return pixel values as rem
@function px-to-rem($px-value) {
  @return $px-value / $baseline-rem;
}

// Return rem values as px
@function rem-to-px($rem-value) {
  @return $rem-value * $baseline-rem;
}

@mixin rem($property, $px-values) {
  // Convert the baseline into rems
  // Print the first line in pixel values
  #{$property}: $px-values;

  // If there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number" {
    #{$property}: $px-values / $baseline-rem;
  } @else {
    // Create an empty list that we can dump values into
    $rem-values: unquote("");

    @each $value in $px-values {
        // If the value is zero, return 0
        @if $value == 0 {
            $rem-values: append($rem-values, $value);
        } @else {
            $rem-values: append($rem-values, $value / $baseline-rem);
        }
    }

    // Return the property and its list of converted values
    #{$property}: $rem-values;
  }
}


/* ==========================================================================
PX to REM
========================================================================== */


@function px2percent ($px,$contextSize) {
  @return ( $px / $contextSize) * 100%;
}

@function px2rem($px, $base: $base-font-size) {
  @return ( $px / $base ) * 1rem;
}

@mixin font-size($px) {
  font-size: ($px);
  font-size: px2rem($px);
}

@mixin line-height($px) {
  line-height: ($px);
  line-height: px2rem($px);
}



